<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/10/01/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h1 id="一级目录"><a href="#一级目录" class="headerlink" title="一级目录"></a>一级目录</h1><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>MySql笔记</title>
    <url>/2021/10/02/MySql%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><hr>
<p>MySQL是一个关系型数据库管理系统</p>
<p>5.7 -&gt; 稳定   </p>
<p><strong>8.0</strong></p>
<h2 id="my-ini"><a href="#my-ini" class="headerlink" title="my.ini"></a>my.ini</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line">basedir=D:\Program Files\mysql</span><br><span class="line"></span><br><span class="line">datadir=D:\Program Files\mysql\data</span><br><span class="line"></span><br><span class="line">max_connections=200</span><br><span class="line"></span><br><span class="line">max_connect_errors=10</span><br><span class="line"></span><br><span class="line">character-set-server=utf8</span><br><span class="line"></span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line"></span><br><span class="line">default_authentication_plugin=mysql_native_password</span><br><span class="line">[mysql]</span><br><span class="line"></span><br><span class="line">default-character-set=utf8</span><br><span class="line">[client]</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure>
<h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库   "></a>创建数据库   </h2><p>基字符集：<em>utf-8</em><br>数据库排序规则：<em>utf8—general-ci</em>   </p>
<h3 id="1-连接数据库"><a href="#1-连接数据库" class="headerlink" title="1.连接数据库"></a>1.连接数据库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p123456 -- 连接数据库</span><br><span class="line"></span><br><span class="line">update mysql.user</span><br><span class="line">set authentication_string=password(&#x27;123456&#x27;)</span><br><span class="line">where user = &#x27;root&#x27;</span><br><span class="line">  and Host = &#x27;localhost&#x27;;  -- 修改用户密码</span><br><span class="line"></span><br><span class="line">flush privileges ;  -- 刷新权限</span><br><span class="line">-- -----------------------------------------</span><br><span class="line">-- 所有的语句都用;结尾</span><br><span class="line">show databases ; -- 查看所有数据库</span><br><span class="line"></span><br><span class="line">mysql&gt;use school -- 切换数据库 use</span><br><span class="line">Database changed</span><br><span class="line"></span><br><span class="line">show tables ; -- 查看数据库中所有的表</span><br><span class="line">describe student; -- 显示数据库中所有表的信息</span><br><span class="line"></span><br><span class="line">create database whlll; -- 创建一个数据库</span><br><span class="line"></span><br><span class="line">exit;</span><br><span class="line">-- 单行注释</span><br><span class="line">/*(多行注释)</span><br><span class="line">你好</span><br><span class="line">whlll</span><br><span class="line">Bye!</span><br><span class="line"> */</span><br></pre></td></tr></table></figure>
<p>数据库xxx语言(CRUD 增删改查!)<br>DDL 定义<br>DML 操作<br>DQL 查询<br>DCL 控制<br>###2.操作数据库</p>
<hr>
<p>操作数据库 -&gt; 操作数据库中的表 -&gt; 操作数据库表中的数据</p>
<h3 id="2-1操作数据库-了解"><a href="#2-1操作数据库-了解" class="headerlink" title="2.1操作数据库(了解)"></a>2.1操作数据库(了解)</h3><ol>
<li>创建数据库<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create database [if not exists] whlll </span><br></pre></td></tr></table></figure></li>
<li>删除数据库<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop database [if exists] whlll </span><br></pre></td></tr></table></figure></li>
<li>使用数据库<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 如果你的表名或字段名是一个特殊字符 需要带 ``</span><br><span class="line">use `school`;</span><br><span class="line">select `user` from student;</span><br></pre></td></tr></table></figure></li>
<li>查看数据库<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show databases -- 查看所有的数据库</span><br></pre></td></tr></table></figure>
学习思路：</li>
</ol>
<ul>
<li>对照sqlyog可视化历史记录查看sql</li>
<li>固定的语法或关键字帮助记忆</li>
</ul>
<h3 id="2-2-数据库的列类型"><a href="#2-2-数据库的列类型" class="headerlink" title="2.2 数据库的列类型"></a>2.2 数据库的列类型</h3><blockquote>
<p>数值</p>
</blockquote>
<ul>
<li>tinyint 十分小的数据 1字节</li>
<li>smallint 较小的数据  2字节</li>
<li>mediumint 中等大小的数据 3字节</li>
<li>int  <strong>标准的整数</strong>   <strong>4字节</strong></li>
<li>bigint 较大的数据 8字节</li>
<li>float 浮点数 4字节</li>
<li>double 浮点数 8字节 (精度问题！)</li>
<li>decimal 字符串形式的浮点数 金融计算时候，一般使用decimal</li>
</ul>
<hr>
<blockquote>
<p>字符串</p>
</blockquote>
<ul>
<li>char 字符串固定大小 0-255</li>
<li>varchar 可变字符串 0-65535 <strong>常用的</strong></li>
<li>tinytext 微型文本 2^8-1</li>
<li>text 文本串 2^16-1 <strong>保存大文本</strong></li>
</ul>
<hr>
<blockquote>
<p>时间日期</p>
</blockquote>
<ul>
<li>date YYYY-MM-DD,日期</li>
<li>time HH:mm:ss 时间格式</li>
<li><strong>datetime YYYY-MM-DD HH:mm:ss 最常用的时间格式</strong></li>
<li>timestamp 时间戳， 1970.1.1到现在的毫秒数！ 较为常用</li>
<li>year 年份表示</li>
</ul>
<hr>
<blockquote>
<p>null</p>
</blockquote>
<ul>
<li>没有值，未知</li>
<li><em>不要使用null值进行计算</em></li>
</ul>
<h3 id="2-3-数据库的字段属性-重点"><a href="#2-3-数据库的字段属性-重点" class="headerlink" title="2.3 数据库的字段属性(重点)"></a>2.3 数据库的字段属性(重点)</h3><blockquote>
<p>Unsigned:</p>
</blockquote>
<ul>
<li>无符号的整数</li>
<li>声明了该列不能声明为负数</li>
</ul>
<hr>
<blockquote>
<p>zerofill：</p>
</blockquote>
<ul>
<li>0填充的</li>
<li>不足的位数，使用0来填充 int(3) -&gt; 5 —&gt; 005</li>
</ul>
<hr>
<blockquote>
<p>自增</p>
</blockquote>
<ul>
<li>通常理解为自增，在上一条的记录基础上+1(默认)</li>
<li>通常用来设计唯一的主键，必须为整数类型</li>
<li>可以自定义主键自增的起始值和增量</li>
</ul>
<hr>
<blockquote>
<p>非空 NULL not null</p>
</blockquote>
<ul>
<li>假设设置为not null ，如果不赋值，则会报错！</li>
<li>NULL，如果不填值，默认为null</li>
</ul>
<hr>
<blockquote>
<p>默认：</p>
</blockquote>
<ul>
<li>设置默认值</li>
<li>eg：sex 默认值为男</li>
</ul>
<hr>
<pre><code>每一个表，都必须存在以下五个字段 -&gt; 项目
id 主键
version 乐观锁
is_delete 伪删除
gmt_create 创建时间
gmt_update 修改时间
</code></pre>
<hr>
<h3 id="2-4-创建数据库表"><a href="#2-4-创建数据库表" class="headerlink" title="2.4 创建数据库表"></a>2.4 创建数据库表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 目标：创建一个school数据库</span><br><span class="line">-- 创建学生表(列，字段) 使用SQL创建</span><br><span class="line">-- 学号int 登录密码varchar(20) 姓名，性别varchar(2)，生日日期(datetime)，家庭住址，email</span><br><span class="line"></span><br><span class="line">-- 注意点，使用英文() ， 表的名称 和 字段 尽量使用 `` 括起来</span><br><span class="line">-- AUTO INCREMENT 自增</span><br><span class="line">-- 字符串使用 单引号括起来！</span><br><span class="line">-- 所有语句后面加,(英文) ,最后一个不用加</span><br><span class="line">CREATE TABLE IF NOT EXISTS `grade`(</span><br><span class="line">    `gradeid` INT(10) NOT NULL AUTO_INCREMENT COMMENT &#x27;年纪id&#x27;,</span><br><span class="line">    `gradename` VARCHAR(50) NOT NULL COMMENT &#x27;年纪名称&#x27;,</span><br><span class="line">    PRIMARY KEY(`gradeid`)</span><br><span class="line">)ENGINE=INNODB DEFAULT CHARSET=utf8</span><br><span class="line"></span><br><span class="line">CREATE TABLE IF NOT EXISTS `student`</span><br><span class="line">(</span><br><span class="line">    `id`   INT(4)      NOT NULL AUTO_INCREMENT COMMENT &#x27;学号&#x27;,</span><br><span class="line">    `name` VARCHAR(30) NOT NULL DEFAULT &#x27;匿名&#x27; COMMENT &#x27;姓名&#x27;,</span><br><span class="line">    `pwd`  VARCHAR(20) NOT NULL DEFAULT &#x27;123456&#x27; COMMENT &#x27;密码&#x27;,</span><br><span class="line">    `sex` VARCHAR(2) NOT NULL DEFAULT &#x27;女&#x27; COMMENT &#x27;性别&#x27;,</span><br><span class="line">    `birthday` DATETIME DEFAULT NULL COMMENT &#x27;出生日期&#x27;,</span><br><span class="line">    `address` VARCHAR(100) DEFAULT NULL COMMENT &#x27;家庭住址&#x27;,</span><br><span class="line">    `email` VARCHAR(50) DEFAULT NULL COMMENT &#x27;邮箱&#x27;,</span><br><span class="line">    PRIMARY KEY (`id`)</span><br><span class="line">)ENGINE=INNODB DEFAULT CHARSET=utf8</span><br></pre></td></tr></table></figure>
<p>格式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TABLE [IF NOT EXISTS] `表名`(</span><br><span class="line">    `字段名` 列类型 [属性] [索引] [注释],</span><br><span class="line">    `字段名` 列类型 [属性] [索引] [注释],</span><br><span class="line">    ......</span><br><span class="line">    `字段名` 列类型 [属性] [索引] [注释]</span><br><span class="line">) [表类型][字符集设置][注释]</span><br><span class="line"></span><br><span class="line">SHOW CREATE DATABASE school -- 查看创建数据库的语句</span><br><span class="line">SHOW CREATE TABLE student -- 查看student数据表的定义语句</span><br><span class="line">DESC student -- 显示表的结构</span><br></pre></td></tr></table></figure>
<h3 id="2-5-数据表的类型"><a href="#2-5-数据表的类型" class="headerlink" title="2.5 数据表的类型"></a>2.5 数据表的类型</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 关于数据库引擎</span><br><span class="line">/*</span><br><span class="line"> INNODB 默认使用</span><br><span class="line"> MYISAM 早些年使用</span><br><span class="line"> */</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th></th>
<th>MYISAM</th>
<th>INNODB</th>
</tr>
</thead>
<tbody><tr>
<td>事务支持</td>
<td>不支持</td>
<td>支持</td>
</tr>
<tr>
<td>数据行锁定</td>
<td>不支持</td>
<td>支持</td>
</tr>
<tr>
<td>外键约束</td>
<td>不支持</td>
<td>支持</td>
</tr>
<tr>
<td>全文索引</td>
<td>支持</td>
<td>不支持</td>
</tr>
<tr>
<td>表空间的大小</td>
<td>较小</td>
<td>较大，约为2倍</td>
</tr>
<tr>
<td>常规使用操作：</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<ul>
<li>MYISAM 节约空间，速度快</li>
<li>INNODB 安全性高，事务的处理，多表多用户操作</li>
</ul>
<p><strong>物理空间的存在位置</strong><br>所有的数据库文件都存在data目录下，一个文件夹对应一个数据库<br>本质还是文件的储存   </p>
<p>MySQL引擎在物理文件上的区别    </p>
<ul>
<li>INNODB 在数据库表中只有一个 *.frm 文件，以及上级目录下的 ibdata1 文件</li>
<li>MYISAM 对应文件<ul>
<li>*.frm - 表结构的定义文件</li>
<li>*.MYD 数据文件(data)</li>
<li>*.MYI 索引文件(index)</li>
</ul>
</li>
</ul>
<p><strong>设置数据库表的字符集编码</strong></p>
<pre><code>CHARSET=utf8
</code></pre>
<p>不设置 -&gt; 默认 -&gt; 不支持中文<br>在my.ini中设置默认的编码</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">character_set_server<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure>
<h3 id="2-6-修改删除表"><a href="#2-6-修改删除表" class="headerlink" title="2.6 修改删除表"></a>2.6 修改删除表</h3><blockquote>
<p>修改</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 修改表 ALTER TABLE 旧表名 RENAME AS 新表名</span><br><span class="line">ALTER TABLE teacher RENAME AS teacher1;</span><br><span class="line">-- 增加表的字段 ALTER TABLE 表名 ADD 字段名 列属性</span><br><span class="line">ALTER TABLE teacher1 ADD age INT(11);</span><br><span class="line">-- 修改表的字段(重命名，修改约束！)</span><br><span class="line">-- ALTER TABLE 表名 MODIFY 字段名 列属性[]</span><br><span class="line">ALTER TABLE teacher1 MODIFY age VARCHAR(11); -- 修改约束</span><br><span class="line">-- ALTER TABLE 表名 CHANGE 旧名字 新名字 列属性[]</span><br><span class="line">ALTER TABLE teacher1 CHANGE age age1 INT(1); -- 字段重命名</span><br><span class="line">    </span><br><span class="line">-- 删除表的字段</span><br><span class="line">ALTER TABLE teacher1 DROP age1;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>删除</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 删除表</span><br><span class="line">DROP TABLE IF EXISTS teacher1</span><br></pre></td></tr></table></figure>
<p><strong>所有的创建和删除尽量加上判断，以免报错~</strong><br>注意点：</p>
<ul>
<li>``字段名,使用这个包裹！</li>
<li>注释 – /**/</li>
<li>sql 关键字大小写不敏感 -&gt; 建议写小写</li>
<li>所有的符号用英文</li>
</ul>
<h2 id="MySQL数据管理"><a href="#MySQL数据管理" class="headerlink" title="MySQL数据管理"></a>MySQL数据管理</h2><h3 id="3-1-外键-了解"><a href="#3-1-外键-了解" class="headerlink" title="3.1 外键(了解)"></a>3.1 外键(了解)</h3><blockquote>
<p>方式一、在创建表的时候，增加约束(麻烦，比较复杂)</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS `grade`(</span><br><span class="line">    `gradeid` INT(10) NOT NULL AUTO_INCREMENT COMMENT &#x27;年纪id&#x27;,</span><br><span class="line">    `gradename` VARCHAR(50) NOT NULL COMMENT &#x27;年纪名称&#x27;,</span><br><span class="line">    PRIMARY KEY(`gradeid`)</span><br><span class="line">)ENGINE=INNODB DEFAULT CHARSET=utf8</span><br><span class="line">    </span><br><span class="line">-- 学生表的 gradeid 字段 要去引用年级表的 gradeid</span><br><span class="line">-- 定义外键key</span><br><span class="line">-- 给这个外键添加约束(执行引用) references 引用</span><br><span class="line">CREATE TABLE IF NOT EXISTS `student`</span><br><span class="line">(</span><br><span class="line">    `id`   INT(4)      NOT NULL AUTO_INCREMENT COMMENT &#x27;学号&#x27;,</span><br><span class="line">    `name` VARCHAR(30) NOT NULL DEFAULT &#x27;匿名&#x27; COMMENT &#x27;姓名&#x27;,</span><br><span class="line">    `pwd`  VARCHAR(20) NOT NULL DEFAULT &#x27;123456&#x27; COMMENT &#x27;密码&#x27;,</span><br><span class="line">    `sex` VARCHAR(2) NOT NULL DEFAULT &#x27;女&#x27; COMMENT &#x27;性别&#x27;,</span><br><span class="line">    `gradeid` INT(10) NOT NULL COMMENT &#x27;学生的年级&#x27;,</span><br><span class="line">    `birthday` DATETIME DEFAULT NULL COMMENT &#x27;出生日期&#x27;,</span><br><span class="line">    `address` VARCHAR(100) DEFAULT NULL COMMENT &#x27;家庭住址&#x27;,</span><br><span class="line">    `email` VARCHAR(50) DEFAULT NULL COMMENT &#x27;邮箱&#x27;,</span><br><span class="line">    PRIMARY KEY (`id`),</span><br><span class="line">    KEY `FK_gradeid` (`gradeid`),</span><br><span class="line">    CONSTRAINT `FK_gradeid` FOREIGN KEY (`gradeid`) REFERENCES `grade`(`gradeid`)</span><br><span class="line">)ENGINE=INNODB DEFAULT CHARSET=utf8</span><br></pre></td></tr></table></figure>
<p>删除有外键关系的表的时候，必须删除引用别人的表(从表),再删除被引用的表(主表)    </p>
<blockquote>
<p>方式二、创建表成功后，添加外键约束</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS `grade`(</span><br><span class="line">    `gradeid` INT(10) NOT NULL AUTO_INCREMENT COMMENT &#x27;年纪id&#x27;,</span><br><span class="line">    `gradename` VARCHAR(50) NOT NULL COMMENT &#x27;年纪名称&#x27;,</span><br><span class="line">    PRIMARY KEY(`gradeid`)</span><br><span class="line">)ENGINE=INNODB DEFAULT CHARSET=utf8</span><br><span class="line">    </span><br><span class="line">-- 学生表的 gradeid 字段 要去引用年级表的 gradeid</span><br><span class="line">-- 定义外键key</span><br><span class="line">-- 给这个外键添加约束(执行引用) references 引用</span><br><span class="line">CREATE TABLE IF NOT EXISTS `student`</span><br><span class="line">(</span><br><span class="line">    `id`   INT(4)      NOT NULL AUTO_INCREMENT COMMENT &#x27;学号&#x27;,</span><br><span class="line">    `name` VARCHAR(30) NOT NULL DEFAULT &#x27;匿名&#x27; COMMENT &#x27;姓名&#x27;,</span><br><span class="line">    `pwd`  VARCHAR(20) NOT NULL DEFAULT &#x27;123456&#x27; COMMENT &#x27;密码&#x27;,</span><br><span class="line">    `sex` VARCHAR(2) NOT NULL DEFAULT &#x27;女&#x27; COMMENT &#x27;性别&#x27;,</span><br><span class="line">    `gradeid` INT(10) NOT NULL COMMENT &#x27;学生的年级&#x27;,</span><br><span class="line">    `birthday` DATETIME DEFAULT NULL COMMENT &#x27;出生日期&#x27;,</span><br><span class="line">    `address` VARCHAR(100) DEFAULT NULL COMMENT &#x27;家庭住址&#x27;,</span><br><span class="line">    `email` VARCHAR(50) DEFAULT NULL COMMENT &#x27;邮箱&#x27;,</span><br><span class="line">    PRIMARY KEY (`id`)</span><br><span class="line">)ENGINE=INNODB DEFAULT CHARSET=utf8</span><br><span class="line"></span><br><span class="line">-- 创建表的时候没有外键关系</span><br><span class="line">ALTER TABLE `student`</span><br><span class="line">    ADD CONSTRAINT `FK_gradeid` FOREIGN KEY(`gradeid`) REFERENCES `grade`(`gradeid`);</span><br><span class="line"></span><br><span class="line">-- ALTER TABLE 表 ADD CONSTRAINT 约束名 FOREIGN KEY(作为外键的列) REFERENCES 哪个表(哪个字段);</span><br></pre></td></tr></table></figure>
<p>以上操作都是物理外键，数据库级别的外键，我们不建议使用！(避免数据库过多造成困扰)   </p>
<p><strong>最佳实践</strong></p>
<ul>
<li><p>数据库就是单纯的表，只用来存数据，只有行(数据)和列(字段)</p>
</li>
<li><p>我们想使用多张表的数据，想使用外键(程序去实现)<br>###3.2 DML语言(全部记住)<br>数据库意义：数据存储，数据管理<br>DML语言：数据操作语言</p>
</li>
<li><p>insert</p>
</li>
<li><p>update</p>
</li>
<li><p>delete</p>
<h3 id="3-3、添加"><a href="#3-3、添加" class="headerlink" title="3.3、添加"></a>3.3、添加</h3><blockquote>
<p>insert</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 插入语句(添加)</span><br><span class="line">-- insert into 表名([字段名1，字段2，字段3])values(&#x27;值1&#x27;),(&#x27;值2&#x27;),(&#x27;值3&#x27;),...</span><br><span class="line">INSERT INTO `grade`(`gradename`) VALUES(&#x27;大四&#x27;)</span><br><span class="line"></span><br><span class="line">-- 由于主键自增我们可以省略(如果不写表的字段，他就会一一匹配)</span><br><span class="line">INSERT INTO `grade` VALUES(&#x27;大三&#x27;)</span><br><span class="line"></span><br><span class="line">-- 一般写插入语句，我们一定要数据和字段一一对应！</span><br><span class="line"></span><br><span class="line">-- 插入多个字段</span><br><span class="line">INSERT INTO `g`student`rade`(`gradename`) VALUES(&#x27;大二&#x27;),(&#x27;大一&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">INSERT INTO `student`(`name`) VALUES (&#x27;张三&#x27;)</span><br><span class="line"></span><br><span class="line">INSERT INTO `student`(`name`,`pwd`,`sex`) VALUES (&#x27;张三&#x27;,&#x27;aaaaaa&#x27;,&#x27;男&#x27;)</span><br><span class="line"></span><br><span class="line">INSERT INTO `student`(`name`,`pwd`,`sex`) </span><br><span class="line">VALUES (&#x27;李四&#x27;,&#x27;aaaaaa&#x27;,&#x27;男&#x27;),(&#x27;王五&#x27;,&#x27;aaaaaa&#x27;,&#x27;男&#x27;)</span><br></pre></td></tr></table></figure>
<p>语法：<code>insert into 表名([字段名1，字段2，字段3])values(&#39;值1&#39;),(&#39;值2&#39;),(&#39;值3&#39;),...</code></p>
</li>
</ul>
<p>注意事项：   </p>
<ol>
<li>字段和字段之间使用 英文逗号 隔开</li>
<li>字段可以省略，但是后面的值必须一一对应</li>
<li>可以同时插入多条数据，VALUES后面的值，需要使用 , 隔开即可 <code>VALUES(),()</code></li>
</ol>
<h3 id="3-4、修改"><a href="#3-4、修改" class="headerlink" title="3.4、修改"></a>3.4、修改</h3><blockquote>
<p>update 修改谁 (条件) set原来的值=新值</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 修改学员名字,带了条件</span><br><span class="line">UPDATE `student` SET `name`=&#x27;whlll&#x27; WHERE id=1;</span><br><span class="line"></span><br><span class="line">-- 不指定条件的情况下,会改动所有表！</span><br><span class="line">UPDATE `student` SET `name`=&#x27;长江七号&#x27;</span><br><span class="line"></span><br><span class="line">-- 修改多个属性</span><br><span class="line">UPDATE `student` SET `name`=&#x27;whlll&#x27;,`email`=&#x27;whlll0305lhl@gmail.com&#x27; WHERE id=1;</span><br><span class="line"></span><br><span class="line">-- 语法：</span><br><span class="line">-- UPDATE 表名 set column_name = value[column_name=value,...] where [条件]</span><br></pre></td></tr></table></figure>
<p>条件：where子句 运算符 id等于某个值，大于某个值，在某个区间内修改…</p>
<table>
<thead>
<tr>
<th>操作符</th>
<th>意义</th>
<th>范围</th>
<th>结果</th>
</tr>
</thead>
<tbody><tr>
<td>=</td>
<td>等于</td>
<td>5=6</td>
<td>false</td>
</tr>
<tr>
<td>&lt;&gt; 或 !=</td>
<td>不等于</td>
<td>5&lt;&gt;6</td>
<td>true</td>
</tr>
<tr>
<td>BETWEEN…and…</td>
<td>[…]闭合区间</td>
<td>[2,5]</td>
<td></td>
</tr>
<tr>
<td>AND</td>
<td>与</td>
<td>5&gt;1 and 1&gt;2</td>
<td>false</td>
</tr>
<tr>
<td>OR</td>
<td>或</td>
<td>5&gt;1 or 1&gt;2</td>
<td>true</td>
</tr>
</tbody></table>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 通过多个条件定位数据</span><br><span class="line">UPDATE `student` SET `name`=&#x27;银河舰队&#x27; WHERE `name`=&#x27;whlll&#x27; AND sex=&#x27;女&#x27;</span><br></pre></td></tr></table></figure>

<p>语法：UPDATE 表名 set column_name = value[column_name=value,…] where [条件]<br>注意：</p>
<ul>
<li>column_name 是数据库的列，尽量带上```</li>
<li>条件，筛选条件，如果没有给定，则会修改所有的列</li>
<li>value，是一个具体的值，也可以是一个变量</li>
<li>多个设置的属性之间，使用英文逗号隔开<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">UPDATE `student` SET `birthday`=CURRENT_TIME WHERE `name`=&#x27;银河舰队&#x27; AND sex=&#x27;女&#x27;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="3-5、删除"><a href="#3-5、删除" class="headerlink" title="3.5、删除"></a>3.5、删除</h3><blockquote>
<p>delete 命令</p>
</blockquote>
<p>语法：delete from 表名 [where 条件]</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 删除数据(避免这样写) 会全部删除</span><br><span class="line">DELETE FROM `student`;</span><br><span class="line">-- 删除指定数据</span><br><span class="line">DELETE FROM `student` WHERE id=1</span><br></pre></td></tr></table></figure>
<blockquote>
<p>TRUNCATE 命令<br>作用：完全清空一个数据库表，表的结构和索引约束不会变！</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 清空 student 表</span><br><span class="line">TRUNCATE `student`</span><br></pre></td></tr></table></figure>
<blockquote>
<p>delete 和 TRUNCATE 区别</p>
</blockquote>
<ul>
<li>相同点：都能删除数据，都不会删除表结构</li>
<li>不同：<ul>
<li>TRUNCATE 重新设置 自增列 计数器会归零</li>
<li>TRUNCATE 不会影响事务<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 测试delete 和 TRUNCATE 区别</span><br><span class="line">CREATE TABLE `test`(</span><br><span class="line">`id` INT(4) NOT NULL AUTO_INCREMENT,</span><br><span class="line">`coll` VARCHAR(20) NOT NULL,</span><br><span class="line">PRIMARY KEY (`id`)</span><br><span class="line">)ENGINE=INNODB DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">INSERT INTO `test`(`coll`) VALUES(&#x27;1&#x27;),(&#x27;2&#x27;),(&#x27;3&#x27;);</span><br><span class="line"></span><br><span class="line">DELETE FROM `test`; -- 不会影响自增</span><br><span class="line"></span><br><span class="line">TRUNCATE TABLE `test` -- 自增会归零</span><br></pre></td></tr></table></figure>
了解即可：DELETE删除的问题，重启数据库，现象</li>
</ul>
</li>
<li>INNODB 自增列会从1开始(存在内存中的，断电即失)</li>
<li>MyISAM 继续从上一个自增量开始(存在文件中的，断电不会丢失)</li>
</ul>
<h2 id="4、DQL查询数据-最重点"><a href="#4、DQL查询数据-最重点" class="headerlink" title="4、DQL查询数据(最重点)"></a>4、DQL查询数据(最重点)</h2><h3 id="4-1、DQL"><a href="#4-1、DQL" class="headerlink" title="4.1、DQL"></a>4.1、DQL</h3><p>(Data Query LANGUAGE:数据查询语言)</p>
<ul>
<li>所有的查询操作都用它 Slect</li>
<li>简单的查询，复杂的查询它都做~</li>
<li>__数据库中最核心的语言，最重要的语句</li>
<li>使用频率最高的语句</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 查询全部的学生 SELECT 字段 FROM 表</span><br><span class="line">SELECT * FROM student;</span><br><span class="line">  </span><br><span class="line">-- 查询指定字段</span><br><span class="line">SELECT `StudentNo`,`StudentName` FROM student; </span><br><span class="line">  </span><br><span class="line">-- 别名 给结果起一个名字 AS 可以给字段起别名 也可以给表起别名</span><br><span class="line">SELECT `StudentNo` AS 学号,`StudentName` AS 学生姓名 FROM student AS s</span><br><span class="line"></span><br><span class="line">-- 函数 Concat(a,b)</span><br><span class="line">SELECT CONCAT(&#x27;姓名&#x27;,StudentName) AS 新名字 FROM student</span><br></pre></td></tr></table></figure>
<p>语法：SELECT 字段… FROM 表</p>
<blockquote>
<p>有的时候，列名字不是那么的好理解，起别名 AS (字段名 AS 别名) </p>
</blockquote>
<blockquote>
<p>去重 distinct<br>作用：去除SELECT查询出来的结果中的重复数据，重复的数据只显示一条</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT DISTINCT `StudnetNo` FROM result; -- 发现重复数据 去重</span><br></pre></td></tr></table></figure>

<blockquote>
<p>数据库的列(表达式)</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT VERSION() -- 查询系统版本(函数)</span><br><span class="line"></span><br><span class="line">SELECT 100*3-1 AS 计算结果 -- 用来计算(计算表达式)</span><br><span class="line"></span><br><span class="line">SELECT @@auto_increment_increment -- 查询自增的步长(变量)</span><br><span class="line"></span><br><span class="line">-- 学员考试成绩 +1分 查看</span><br><span class="line">SELECT `StudentNo`,`StudentResult`+1 AS &#x27;提分后&#x27; FROM result</span><br></pre></td></tr></table></figure>

<p>数据库中的表达式：文本值，列，Null，函数，计算表达式，系统变量… </p>
<p>select 表达式 from 表 </p>
<h3 id="4-3、where-条件子句"><a href="#4-3、where-条件子句" class="headerlink" title="4.3、where 条件子句"></a>4.3、where 条件子句</h3><p>作用：检索数据中 符合条件 的值  </p>
<p>搜索的条件由一个或多个表达式组成！ 结果 布尔值</p>
<blockquote>
<p>逻辑运算符</p>
</blockquote>
<table>
<thead>
<tr>
<th>运算符</th>
<th>语法</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>and &amp;&amp;</td>
<td>a and b</td>
<td>逻辑与</td>
</tr>
<tr>
<td>or</td>
<td>a or b</td>
<td>逻辑或</td>
</tr>
<tr>
<td>Not !</td>
<td>not a</td>
<td>逻辑非</td>
</tr>
<tr>
<td><strong>尽量使用英文字母</strong></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- =====================where===========================</span><br><span class="line"></span><br><span class="line">SELECT studentNo,`StudentResult` FROM result</span><br><span class="line"></span><br><span class="line">-- 查询考试成绩在 95-100 分之间的</span><br><span class="line">SELECT studentNo,`StudentResult` FROM result</span><br><span class="line">WHERE StudentResult&gt;95 AND StudentResult&lt;=100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- and &amp;&amp;</span><br><span class="line">SELECT studentNo,`StudentResult` FROM result</span><br><span class="line">WHERE StudentResult&gt;95 &amp;&amp; StudentResult&lt;=100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 模糊查询 (区间)</span><br><span class="line">SELECT studentNo,`StudentResult` FROM result</span><br><span class="line">WHERE StudentResult BETWEEN 95 AND 100</span><br><span class="line"></span><br><span class="line">-- 除了1000号同学之外同学的成绩</span><br><span class="line">SELECT studentNo,`StudentResult` FROM result</span><br><span class="line">WHERE studentNo!=1000;</span><br><span class="line"></span><br><span class="line">-- != not</span><br><span class="line">SELECT studentNo,`StudentResult` FROM result</span><br><span class="line">WHERE NOT studentNo = 1000</span><br></pre></td></tr></table></figure>

<blockquote>
<p>模糊查询：比较运算符</p>
</blockquote>
]]></content>
      <categories>
        <category>工作学习</category>
      </categories>
  </entry>
</search>
